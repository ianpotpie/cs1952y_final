## SLURM PROLOG ###############################################################
##    Job ID : 11251518
##  Job Name : [none]
##  Nodelist : gpu2008
##      CPUs : 1
##  Mem/Node : 12288 MB
## Directory : /oscar/home/igordon/cs1952y_final
##   Job Started : Sat May  3 10:01:13 PM EDT 2025
###############################################################################
====== Job and Node Information ======
Job ID: 
Node List: 
Number of Nodes: 
Number of Tasks: 
CPUs per Task: 

====== CPU Information ======
Architecture:                    x86_64
CPU op-mode(s):                  32-bit, 64-bit
Address sizes:                   46 bits physical, 48 bits virtual
Byte Order:                      Little Endian
CPU(s):                          32
On-line CPU(s) list:             0-31
Vendor ID:                       GenuineIntel
Model name:                      Intel(R) Xeon(R) Gold 6242 CPU @ 2.80GHz
CPU family:                      6
Model:                           85
Thread(s) per core:              1
Core(s) per socket:              16
Socket(s):                       2
Stepping:                        7
CPU max MHz:                     3900.0000
CPU min MHz:                     1200.0000
BogoMIPS:                        5600.00
Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single intel_ppin ssbd mba ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm mpx rdt_a avx512f avx512dq rdseed adx smap clflushopt clwb intel_pt avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req pku ospke avx512_vnni md_clear flush_l1d arch_capabilities
Virtualization:                  VT-x
L1d cache:                       1 MiB (32 instances)
L1i cache:                       1 MiB (32 instances)
L2 cache:                        32 MiB (32 instances)
L3 cache:                        44 MiB (2 instances)
NUMA node(s):                    2
NUMA node0 CPU(s):               0-15
NUMA node1 CPU(s):               16-31
Vulnerability Itlb multihit:     KVM: Mitigation: VMX disabled
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Mmio stale data:   Mitigation; Clear CPU buffers; SMT disabled
Vulnerability Retbleed:          Mitigation; Enhanced IBRS
Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Mitigation; TSX disabled

====== Memory Information ======
               total        used        free      shared  buff/cache   available
Mem:           376Gi        49Gi        71Gi       8.5Gi       272Gi       326Gi
Swap:             0B          0B          0B

====== GPU Information (if available) ======
Sat May  3 22:02:08 2025       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.129.03             Driver Version: 535.129.03   CUDA Version: 12.2     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  Quadro RTX 6000                On  | 00000000:63:00.0 Off |                  Off |
| 33%   29C    P8               8W / 260W |     26MiB / 24576MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|    0   N/A  N/A     29508      G   /usr/libexec/Xorg                            24MiB |
+---------------------------------------------------------------------------------------+

====== Program Output ======
Result: <Invalid>
Generating '/tmp/nsys-report-7c45.qdstrm'
[1/8] [0%                          ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [0%                          ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [===========50%              ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [========================100%] bitonic_sort-on-quadrortx.nsys-rep[1/8] [========================99% ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [========================100%] bitonic_sort-on-quadrortx.nsys-rep[1/8] [=====31%                    ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [=====32%                    ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [==19%                       ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [=======39%                  ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [========40%                 ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [=========43%                ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [=========44%                ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [=========46%                ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [==========47%               ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [==========49%               ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [============54%             ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [=============59%            ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [========================98% ] bitonic_sort-on-quadrortx.nsys-rep[1/8] [========================100%] bitonic_sort-on-quadrortx.nsys-rep[1/8] [========================100%] bitonic_sort-on-quadrortx.nsys-rep
[2/8] [0%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [1%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [2%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [3%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [4%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [5%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [6%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [7%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [8%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [9%                          ] bitonic_sort-on-quadrortx.sqlite[2/8] [10%                         ] bitonic_sort-on-quadrortx.sqlite[2/8] [11%                         ] bitonic_sort-on-quadrortx.sqlite[2/8] [12%                         ] bitonic_sort-on-quadrortx.sqlite[2/8] [13%                         ] bitonic_sort-on-quadrortx.sqlite[2/8] [14%                         ] bitonic_sort-on-quadrortx.sqlite[2/8] [=15%                        ] bitonic_sort-on-quadrortx.sqlite[2/8] [=16%                        ] bitonic_sort-on-quadrortx.sqlite[2/8] [=17%                        ] bitonic_sort-on-quadrortx.sqlite[2/8] [==18%                       ] bitonic_sort-on-quadrortx.sqlite[2/8] [==19%                       ] bitonic_sort-on-quadrortx.sqlite[2/8] [==20%                       ] bitonic_sort-on-quadrortx.sqlite[2/8] [==21%                       ] bitonic_sort-on-quadrortx.sqlite[2/8] [===22%                      ] bitonic_sort-on-quadrortx.sqlite[2/8] [===23%                      ] bitonic_sort-on-quadrortx.sqlite[2/8] [===24%                      ] bitonic_sort-on-quadrortx.sqlite[2/8] [====25%                     ] bitonic_sort-on-quadrortx.sqlite[2/8] [====26%                     ] bitonic_sort-on-quadrortx.sqlite[2/8] [====27%                     ] bitonic_sort-on-quadrortx.sqlite[2/8] [====28%                     ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====29%                    ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====30%                    ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====31%                    ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====32%                    ] bitonic_sort-on-quadrortx.sqlite[2/8] [======33%                   ] bitonic_sort-on-quadrortx.sqlite[2/8] [======34%                   ] bitonic_sort-on-quadrortx.sqlite[2/8] [======35%                   ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======36%                  ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======37%                  ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======38%                  ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======39%                  ] bitonic_sort-on-quadrortx.sqlite[2/8] [========40%                 ] bitonic_sort-on-quadrortx.sqlite[2/8] [========41%                 ] bitonic_sort-on-quadrortx.sqlite[2/8] [========42%                 ] bitonic_sort-on-quadrortx.sqlite[2/8] [=========43%                ] bitonic_sort-on-quadrortx.sqlite[2/8] [=========44%                ] bitonic_sort-on-quadrortx.sqlite[2/8] [=========45%                ] bitonic_sort-on-quadrortx.sqlite[2/8] [=========46%                ] bitonic_sort-on-quadrortx.sqlite[2/8] [==========47%               ] bitonic_sort-on-quadrortx.sqlite[2/8] [==========48%               ] bitonic_sort-on-quadrortx.sqlite[2/8] [==========49%               ] bitonic_sort-on-quadrortx.sqlite[2/8] [===========50%              ] bitonic_sort-on-quadrortx.sqlite[2/8] [===========51%              ] bitonic_sort-on-quadrortx.sqlite[2/8] [===========52%              ] bitonic_sort-on-quadrortx.sqlite[2/8] [===========53%              ] bitonic_sort-on-quadrortx.sqlite[2/8] [============54%             ] bitonic_sort-on-quadrortx.sqlite[2/8] [============55%             ] bitonic_sort-on-quadrortx.sqlite[2/8] [============56%             ] bitonic_sort-on-quadrortx.sqlite[2/8] [============57%             ] bitonic_sort-on-quadrortx.sqlite[2/8] [=============58%            ] bitonic_sort-on-quadrortx.sqlite[2/8] [=============59%            ] bitonic_sort-on-quadrortx.sqlite[2/8] [=============60%            ] bitonic_sort-on-quadrortx.sqlite[2/8] [==============61%           ] bitonic_sort-on-quadrortx.sqlite[2/8] [==============62%           ] bitonic_sort-on-quadrortx.sqlite[2/8] [==============63%           ] bitonic_sort-on-quadrortx.sqlite[2/8] [==============64%           ] bitonic_sort-on-quadrortx.sqlite[2/8] [===============65%          ] bitonic_sort-on-quadrortx.sqlite[2/8] [===============66%          ] bitonic_sort-on-quadrortx.sqlite[2/8] [===============67%          ] bitonic_sort-on-quadrortx.sqlite[2/8] [================68%         ] bitonic_sort-on-quadrortx.sqlite[2/8] [================69%         ] bitonic_sort-on-quadrortx.sqlite[2/8] [================70%         ] bitonic_sort-on-quadrortx.sqlite[2/8] [================71%         ] bitonic_sort-on-quadrortx.sqlite[2/8] [=================72%        ] bitonic_sort-on-quadrortx.sqlite[2/8] [=================73%        ] bitonic_sort-on-quadrortx.sqlite[2/8] [=================74%        ] bitonic_sort-on-quadrortx.sqlite[2/8] [==================75%       ] bitonic_sort-on-quadrortx.sqlite[2/8] [==================76%       ] bitonic_sort-on-quadrortx.sqlite[2/8] [==================77%       ] bitonic_sort-on-quadrortx.sqlite[2/8] [==================78%       ] bitonic_sort-on-quadrortx.sqlite[2/8] [===================79%      ] bitonic_sort-on-quadrortx.sqlite[2/8] [===================80%      ] bitonic_sort-on-quadrortx.sqlite[2/8] [===================81%      ] bitonic_sort-on-quadrortx.sqlite[2/8] [===================82%      ] bitonic_sort-on-quadrortx.sqlite[2/8] [====================83%     ] bitonic_sort-on-quadrortx.sqlite[2/8] [====================84%     ] bitonic_sort-on-quadrortx.sqlite[2/8] [====================85%     ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====================86%    ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====================87%    ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====================88%    ] bitonic_sort-on-quadrortx.sqlite[2/8] [=====================89%    ] bitonic_sort-on-quadrortx.sqlite[2/8] [======================90%   ] bitonic_sort-on-quadrortx.sqlite[2/8] [======================91%   ] bitonic_sort-on-quadrortx.sqlite[2/8] [======================92%   ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======================93%  ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======================94%  ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======================95%  ] bitonic_sort-on-quadrortx.sqlite[2/8] [=======================96%  ] bitonic_sort-on-quadrortx.sqlite[2/8] [========================97% ] bitonic_sort-on-quadrortx.sqlite[2/8] [========================98% ] bitonic_sort-on-quadrortx.sqlite[2/8] [========================99% ] bitonic_sort-on-quadrortx.sqlite[2/8] [========================100%] bitonic_sort-on-quadrortx.sqlite[2/8] [========================100%] bitonic_sort-on-quadrortx.sqlite
[3/8] Executing 'nvtx_sum' stats report
[4/8] Executing 'osrt_sum' stats report

 Time (%)  Total Time (ns)  Num Calls    Avg (ns)       Med (ns)      Min (ns)     Max (ns)    StdDev (ns)        Name     
 --------  ---------------  ---------  -------------  -------------  -----------  -----------  ------------  --------------
     31.3      485,082,581          1  485,082,581.0  485,082,581.0  485,082,581  485,082,581           0.0  waitpid       
     27.4      424,566,451         22   19,298,475.0        1,086.5          327  415,094,967  88,419,531.4  read          
     19.7      305,913,639          1  305,913,639.0  305,913,639.0  305,913,639  305,913,639           0.0  sem_wait      
     10.9      168,849,679         15   11,256,645.3    3,519,725.0        1,829   60,246,315  19,570,005.4  poll          
      7.0      108,607,446        595      182,533.5       48,034.0          349   33,224,010   1,503,014.4  ioctl         
      1.7       26,056,277         48      542,839.1        3,246.0        1,638   12,181,807   2,450,956.0  fopen         
      1.5       23,273,662         70      332,480.9        5,649.0          913   12,801,168   1,871,859.8  open64        
      0.1        2,297,432          7      328,204.6       12,411.0          118    1,351,580     506,195.2  fread         
      0.1        1,889,917         58       32,584.8          405.0          150    1,196,612     178,522.3  fcntl         
      0.1        1,816,302         21       86,490.6       28,193.0          279    1,002,837     222,572.8  write         
      0.1        1,572,120         34       46,238.8        6,771.5        2,893    1,090,811     185,079.1  mmap64        
      0.1        1,199,454          5      239,890.8      101,546.0       70,565      478,337     209,364.6  pthread_create
      0.0          160,266         21        7,631.7        4,052.0        1,043       44,556       9,483.5  mmap          
      0.0           56,397         65          867.6           44.0           38       32,523       4,314.5  fgets         
      0.0           47,208         41        1,151.4          953.0          551        4,813         687.4  fclose        
      0.0           36,910         12        3,075.8        3,243.5        1,207        4,104         898.5  munmap        
      0.0           32,331          6        5,388.5        5,114.0        1,630        9,662       2,936.3  open          
      0.0           18,018          2        9,009.0        9,009.0        7,630       10,388       1,950.2  socket        
      0.0           16,494          2        8,247.0        8,247.0        6,720        9,774       2,159.5  pipe2         
      0.0           10,018          1       10,018.0       10,018.0       10,018       10,018           0.0  connect       
      0.0            6,569          3        2,189.7        2,164.0        1,425        2,980         777.8  mprotect      
      0.0            3,278          1        3,278.0        3,278.0        3,278        3,278           0.0  fopen64       
      0.0            2,769          2        1,384.5        1,384.5        1,148        1,621         334.5  signal        
      0.0            2,529          1        2,529.0        2,529.0        2,529        2,529           0.0  bind          
      0.0            2,200          8          275.0          268.0          159          419          96.2  dup           
      0.0            1,791          8          223.9          216.0          151          324          58.3  sigaction     
      0.0            1,063          1        1,063.0        1,063.0        1,063        1,063           0.0  listen        
      0.0              802         10           80.2           35.5           30          320          90.5  fflush        

[5/8] Executing 'cuda_api_sum' stats report

 Time (%)  Total Time (ns)  Num Calls    Avg (ns)      Med (ns)    Min (ns)    Max (ns)     StdDev (ns)            Name         
 --------  ---------------  ---------  ------------  ------------  ---------  -----------  -------------  ----------------------
     97.7      186,985,378          2  93,492,689.0  93,492,689.0  5,292,198  181,693,180  124,734,330.6  cudaMemcpyToSymbol    
      2.0        3,784,800          5     756,960.0      32,369.0      2,281    3,680,778    1,634,555.8  cudaLaunchKernel      
      0.3          564,777          1     564,777.0     564,777.0    564,777      564,777            0.0  cudaMalloc            
      0.0           73,947          6      12,324.5       9,679.5      4,615       29,811        8,841.0  cudaMemcpy            
      0.0            4,274          1       4,274.0       4,274.0      4,274        4,274            0.0  cudaDeviceSynchronize 
      0.0            1,089          1       1,089.0       1,089.0      1,089        1,089            0.0  cuModuleGetLoadingMode

[6/8] Executing 'cuda_gpu_kern_sum' stats report

 Time (%)  Total Time (ns)  Instances  Avg (ns)   Med (ns)   Min (ns)  Max (ns)  StdDev (ns)                   Name                 
 --------  ---------------  ---------  ---------  ---------  --------  --------  -----------  --------------------------------------
     81.9          405,405          1  405,405.0  405,405.0   405,405   405,405          0.0  initialize(GNet *)                    
     17.2           85,312          1   85,312.0   85,312.0    85,312    85,312          0.0  print_result(GNet *)                  
      0.4            2,176          1    2,176.0    2,176.0     2,176     2,176          0.0  inbetween(GNet *)                     
      0.4            1,888          1    1,888.0    1,888.0     1,888     1,888          0.0  boot_redex(GNet *, unsigned long long)

[7/8] Executing 'cuda_gpu_mem_time_sum' stats report

 Time (%)  Total Time (ns)  Count   Avg (ns)     Med (ns)    Min (ns)  Max (ns)   StdDev (ns)      Operation     
 --------  ---------------  -----  -----------  -----------  --------  ---------  -----------  ------------------
     99.9        9,727,457      3  3,242,485.7  4,769,409.0       416  4,957,632  2,809,291.5  [CUDA memcpy HtoD]
      0.1            7,264      5      1,452.8      1,440.0     1,248      1,728        200.6  [CUDA memcpy DtoH]

[8/8] Executing 'cuda_gpu_mem_size_sum' stats report

 Total (MB)  Count  Avg (MB)  Med (MB)  Min (MB)  Max (MB)  StdDev (MB)      Operation     
 ----------  -----  --------  --------  --------  --------  -----------  ------------------
     51.380      3    17.127    25.690     0.000    25.690       14.832  [CUDA memcpy HtoD]
      0.000      5     0.000     0.000     0.000     0.000        0.000  [CUDA memcpy DtoH]

Generated:
    /oscar/home/igordon/cs1952y_final/out/bitonic_sort-on-quadrortx.nsys-rep
    /oscar/home/igordon/cs1952y_final/out/bitonic_sort-on-quadrortx.sqlite
